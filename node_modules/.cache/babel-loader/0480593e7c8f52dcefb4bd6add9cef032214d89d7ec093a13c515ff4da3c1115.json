{"ast":null,"code":"import { toast } from \"react-hot-toast\";\nconst mailValidate = async values => {\n  const errors = nameVerify({}, values);\n  emailVerify(errors, values);\n  messageVerify(errors, values);\n  subjectVerify(errors, values);\n  companyVerify(errors, values);\n  return errors;\n};\nconst nameVerify = function () {\n  let err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.name) {\n    err.name = toast.error(\"Name is Required!\");\n  } else if (values.name.includes(\" \")) {\n    err.name = toast.error(\"Invalid name!\");\n  }\n  return err;\n};\nconst companyVerify = function () {\n  let err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.company) {\n    err.company = toast.error(\"company is Required!\");\n  } else if (values.company.includes(\" \")) {\n    err.company = toast.error(\"Invalid company!\");\n  }\n  return err;\n};\nconst messageVerify = function () {\n  let err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.message) {\n    err.message = toast.error(\"Please write some message!\");\n  }\n  return err;\n};\nconst subjectVerify = function () {\n  let err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.message) {\n    err.message = toast.error(\"Please write some subject!\");\n  }\n  return err;\n};\nconst emailVerify = function () {\n  let err = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  const specialCharacter = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n  if (!values.email) {\n    err.email = toast.error(\"Email is required\");\n  } else if (values.email === \" \") {\n    err.email = toast.error(\"Wrong email\");\n  } else if (!specialCharacter.test(values.email)) {\n    err.email = toast.error(\"Invalid email address\");\n  }\n  return err;\n};\nexport default mailValidate;","map":{"version":3,"names":["toast","mailValidate","values","errors","nameVerify","emailVerify","messageVerify","subjectVerify","companyVerify","err","arguments","length","undefined","name","error","includes","company","message","specialCharacter","email","test"],"sources":["C:/Users/ASUS/Desktop/a/src/helpers/validate.js"],"sourcesContent":["import { toast } from \"react-hot-toast\";\r\n\r\nconst mailValidate = async (values) => {\r\n  const errors = nameVerify({}, values);\r\n  emailVerify(errors, values);\r\n  messageVerify(errors, values);\r\n  subjectVerify(errors, values);\r\n  companyVerify(errors, values);\r\n  return errors;\r\n};\r\n\r\nconst nameVerify = (err = {}, values) => {\r\n  if (!values.name) {\r\n    err.name = toast.error(\"Name is Required!\");\r\n  } else if (values.name.includes(\" \")) {\r\n    err.name = toast.error(\"Invalid name!\");\r\n  }\r\n  return err;\r\n};\r\nconst companyVerify = (err = {}, values) => {\r\n  if (!values.company) {\r\n    err.company = toast.error(\"company is Required!\");\r\n  } else if (values.company.includes(\" \")) {\r\n    err.company = toast.error(\"Invalid company!\");\r\n  }\r\n  return err;\r\n};\r\nconst messageVerify = (err = {}, values) => {\r\n  if (!values.message) {\r\n    err.message = toast.error(\"Please write some message!\");\r\n  }\r\n  return err;\r\n};\r\nconst subjectVerify = (err = {}, values) => {\r\n  if (!values.message) {\r\n    err.message = toast.error(\"Please write some subject!\");\r\n  }\r\n  return err;\r\n};\r\nconst emailVerify = (err = {}, values) => {\r\n  const specialCharacter = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n  if (!values.email) {\r\n    err.email = toast.error(\"Email is required\");\r\n  } else if (values.email === \" \") {\r\n    err.email = toast.error(\"Wrong email\");\r\n  } else if (!specialCharacter.test(values.email)) {\r\n    err.email = toast.error(\"Invalid email address\");\r\n  }\r\n  return err;\r\n};\r\n\r\nexport default mailValidate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}